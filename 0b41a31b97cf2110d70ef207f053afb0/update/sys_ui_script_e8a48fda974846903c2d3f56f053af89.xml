<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <ignore_in_now_experience>false</ignore_in_now_experience>
        <name>x_424426_devops.hidden_fields</name>
        <script><![CDATA[(function ($config, $window) {
	/* global $config, $window */
	/* eslint no-undef: "error" */
	if (!($config.hidden_fields?.length > 0)) {
		return;
	}

	if ($config.env?.action?.startsWith('merge_form_')) {
		return;
	}

	// we only need to show fields which aren't visible on the form
	const g_form = $window.g_form;
	const fields = $config.hidden_fields.filter(f => !g_form.isFieldVisible(f.name));
	if (fields.length == 0) {
		return;
	}

	addHiddenFieldsStyleSheet($config, $window);

	const msgID = 'devops_plus_hidden_fields_message';
	g_form.addInfoMessage('', msgID);
	const msgNode = $window.document.getElementById(msgID);
	if (!msgNode) {
		$window.console.warn('[DevOps+] Failed to add metadata information because message container could not be found!');
		return;
	}

	msgNode.append('Hidden Metadata');
	const table = $window.document.createElement('table');
	msgNode.appendChild(table);

	const header = $window.document.createElement('tr');
	table.appendChild(header);
	['Field', 'Value', ''].forEach(content => {
		const th = $window.document.createElement('th');
		header.appendChild(th);
		th.append(content);
	});
	fields.forEach(f => {
		const tr = $window.document.createElement('tr');
		table.appendChild(tr);
		const labelTd = $window.document.createElement('td');
		tr.appendChild(labelTd);
		labelTd.append(f.label);
		const valueTd = $window.document.createElement('td');
		tr.appendChild(valueTd);

		let valueNode = valueTd;
		if (f.type == 'string') {
			valueTd.innerHTML = f.display_value;
		} else {
			valueNode = $window.document.createTextNode(f.display_value);
			valueTd.appendChild(valueNode);
		}

		const actionTd = $window.document.createElement('td');
		tr.appendChild(actionTd);

		const button = $window.document.createElement('button');
		button.classList.add('btn', 'btn-default', 'btn-ref', 'icon');
		if (f.type == 'reference') {
			button.classList.add('icon-info');
			button.dataset.type = 'reference_popup';
			button.dataset.table = g_form.getTableName();
			button.dataset.form = f.table_name + '.do';
			button.dataset.ref = g_form.getTableName() + '.' + f.name;
			if (!$window.document.getElementById(button.dataset.ref)) {
				// the popup script requires a element with this id and value in order to load properly
				button.id = button.dataset.ref;
				button.value = f.value;
			}
			button.dataset.refKey = 'null';
		} else if (['url', 'string', 'script'].includes(f.type)) {
			button.classList.add('icon-edit');
			if ($config.record.can_write) {
				button.onclick = fieldEdit.bind($window, f, valueNode);
			} else {
				button.setAttribute('disabled', '');
			}
		} else {
			return;
		}

		actionTd.appendChild(button);
	});

	function fieldEdit(field, fieldNode) {
		const $window = this;
		var gm = new $window.GlideModal('x_424426_devops_input_dialog');
		gm.setTitle('Set ' + field.label);
		//gm.setPreference('label', field.label);
		gm.setPreference('value', field.display_value);
		gm.setPreference('onPromptComplete', function (value) {
			field.display_value = value;
			fieldNode.nodeValue = value;

			var xhr = new $window.XMLHttpRequest();
			xhr.open('PUT', 'api/now/table/' + $window.g_form.getTableName() + '/' + $window.g_form.getUniqueValue(), true);
			xhr.setRequestHeader('X-UserToken', $window.g_ck);
			xhr.setRequestHeader('Accept', 'application/json');
			xhr.setRequestHeader('Content-Type', 'application/json');
			xhr.onload = function () {
				gm.destroy();
			};
			const data = {};
			data[field.name] = value;
			xhr.send(JSON.stringify(data));
		});
		gm.render();
		return false;
	}

	function addHiddenFieldsStyleSheet($config, $window) {
		const METADATA_TABLE_SYLE_SHEET_SYS_ID = '877dbaa697c886903c2d3f56f053afd8';
		const element = $window.document.createElement('link');
		element.rel = 'stylesheet';
		element.href = METADATA_TABLE_SYLE_SHEET_SYS_ID + '.cssdbx?v=' + $config.version;
		$window.document.head.appendChild(element);
	}
})($config, $window);]]></script>
        <script_name>hidden_fields</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>markus.kraus</sys_created_by>
        <sys_created_on>2024-02-01 18:41:06</sys_created_on>
        <sys_id>e8a48fda974846903c2d3f56f053af89</sys_id>
        <sys_mod_count>55</sys_mod_count>
        <sys_name>x_424426_devops.hidden_fields</sys_name>
        <sys_package display_value="DevOps+" source="x_424426_devops">0b41a31b97cf2110d70ef207f053afb0</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevOps+">0b41a31b97cf2110d70ef207f053afb0</sys_scope>
        <sys_update_name>sys_ui_script_e8a48fda974846903c2d3f56f053af89</sys_update_name>
        <sys_updated_by>kr4uzi@gmail.com</sys_updated_by>
        <sys_updated_on>2025-03-10 14:29:01</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
